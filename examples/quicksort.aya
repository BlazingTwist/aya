
[4 0 5 2 7 3 2 5 6 6]:lst;

.# Safe self-contained optimized implementation
{:q,
    .# Make a copy of the list so the original is not modified
    $\;

    {l : x,
        .# If the list is more than 1 item long, perform the operation
        .#   otherwise just leave the original list on the stack
        l .E 1 > {
            .# The head from the list
            V:x;;
            .# [ sort items less than x, x, sort items larger than x]
            [l,,x:<]q x [l,,x>]q JJ
        } ?
    }:q ~
}:qs;

lst :P
lst qs :P

.# Golfed version of the above algorithm
.# {l$:x,l.E1>{V:x\{x:<}Iq\Jl{x>}IqJ}?}:q;

.# Stack only version
{.E1> {$\; :&V$@\< @\ :&#! @:&@.i \@.i qss @@qss JJ} ?}:qss;

.# Stack only version with no global vars
.# {.E1> {$\; :&V$@\< @\ :&#! @:&@.i \@.i _ @@_ JJ} ?} {1, :_} :+

.# Quicksort benchmark and example output
.# 10 R :# {; [100000,;.Q] {qs;}.time} :& .E \S\/
.# [ 608 588 609 585 605 582 586 607 621 620 ] 601.1
