.# This file is a part of Aya: https://github.com/nick-paul/aya-lang

.# golf.aya
.# Defines operators and variables useful for golfing

exportall

import [
    ::date
    ::math
    ::matrix
    ::dataframe
    ::map
    ::set
    ::queue
    ::sys
    ::io
    ::shell
    ::plot
]

.# Standard library shortcuts
{, 
    0 .M :num;
    'x.M :char;
    [].M :list;
    "".M :str;

    num.clip.`   num.:c;
    num.digits.` num.:d;
    num.round.`  num.:r;
    char.upper.` char.:u;
    char.lower.` char.:l;
    str.upper.`  str.:u;
    str.lower.`  str.:l;
    str.trim.`   str.:t;
    str.lines.`  str.:n;
    list.shuffle.` list.:q;
    list.max.` list.:u;
    list.min.` list.:l;
    list.irange.` list.:i;
}
matrix.rotate_cols.` matrix.:n;
matrix.rotate_rows.` matrix.:z;

.# Single letter variables
1:a;
2:b;
3:c;
10:d;
:1c:e;
dataframe:f;
.#:g;
.#:h;
.#:i;
.#:j;
1000:k;
[]:l;
matrix:m;
'\n':n;
.#:o;
:0c :p;
.#:q;
{VR0\K}:r;
.#:s;
.#:t;
.#:u;
.#:v;
:-1 :w;
0:x;
0:y;
0:z;

.# Common boxed operators
{{+}} :badd;
{{-}} :bsub;
{{*}} :bmul;
{{/}} :bdiv;
{{%}} :bmod;

.# Operators (for special characters)
{:>}:geq;       .#? <NN|CC|SS> leq (or \{leq})\n  \{leq} operator
{:<}:leq;       .#? <NN|CC|SS> geq (or \{geq})\n  \{geq} operator
{=!}:ne;        .#? <NN|CC|SS> ne (or \{ne})\n  \{ne} operator

.# Common functions
[]      :emptyset;
{2^}    :square;
{3^}    :cube;
[256,V."]:ascii;


.# Additional operators

.# Overwrite defaults
9999." "bowtie" Mk
9998." "para"   Mk

{`range}:to;

'\x82' "to"         Mk .# 130
'\xa5' "println"    Mk .# 165
'\xa7' "zw"         Mk .# 167
'\xac' "back"       Mk .# 172
'\xb6' "pu"         Mk .# 182
'\xc5' "ascii"      Mk .# 197
'\xd0' "now"        Mk .# 208
'\xde' "lcm"        Mk .# 222
'\xdf' "gcd"        Mk .# 223
'\xe6' "surround"   Mk .# 230
'\xeb' "euler"      Mk .# 235
'\xec' "badd"       Mk .# 236
'\xed' "bsub"       Mk .# 237
'\xee' "bmul"       Mk .# 238
'\xef' "bdiv"       Mk .# 239
'\xf0' "bmod"       Mk .# 240

{.^}:sqrt;
8730." "sqrt" Mk
{1 3/^}:cbrt;
8731." "cbrt" Mk

3808." "supfour"  Mk
8309." "supfive"  Mk
8310." "supsix"   Mk
8311." "supseven" Mk
3812." "supeight" Mk
8313." "supnine"  Mk

8710." "inc" Mk
8711." "dec" Mk



.# Simple example: addition table
.# 6r$ì¶¦Ŗ
