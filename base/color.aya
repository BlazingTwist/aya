.# This file is a part of Aya: https://github.com/nick-paul/aya-lang

.# colors.aya
.# Defines both color and colors types

import ::list
import ::str

.{? class color
    A module for manipulating and printing colors in Aya
.}
class ::color


.#
.# Constructors
.#

impl color::__init__ {r::num g::num b::num self,
    [[r g b], .round 0 255 .clip] ~
    self .:b .:g .:r ;
}


impl_static color::newhex {meta,
    16 2 H 24 .> [3 8] L #{2 10 H} ~ meta!
}


impl_static color::newhsv {meta,
    meta.hsvtorgb~ meta!
}


.#
.# Overloads
.#

impl color::__repr__ {self,
    "($(self.r) $(self.g) $(self.b)) color!"
}


impl color::__str__ {self,
    "($(self.r) $(self.g) $(self.b)) color!"
}


.#
.# Math
.#

.#? ::color ::color *\n  multiply two colors
impl color::__mul__ {other self
    other.rgbf self.rgbf * 255* ~ self.M!
}


.# ::color N *\n  multiply a color by a value
impl color::__rmul__ {self n,
    self.rgbf n * 255* :#{0 255 .clip} ~ self.M!
}


.#
.# Conversions
.#

.#? ::color.rgbf\n  return a list of RGB values represented as floats from 0.0 to 1.0
impl color::rgbf {self, [self.r self.g self.b] 255 / }


.#? ::color.rgb\n  return a list containing red, green, and blue values respectively
impl color::rgb {self, [self.r self.g self.b]}


.#? ::color.hex\n  return a hexadecimal string representation of the color
impl color::hex {.rgb #{10 16 H 2 '0 @.leftpad}S}


.#? ::color.hsv\n  return a list containing hue, sat, and val respectively
impl color::hsv {self, self.rgb255/~ self.M.rgbtohsv}


.#
.# Interpolation
.#

.#? ::num ::color ::color.grad\n  creates a gradient of rgb lists from color1 to color2
impl color::grad {n::num begin::color self,
    [ [begin.rgb self.rgb, n intspace]~, self.M!]
}

.#? ::color ::color color.mid\n  returns the color in between color1 and color2 using rgb
impl color::mid {3@@\.grad 1I}


.#? [::color] N color.multigrad\n  compute a linear gradient with resolution N between each color
static color::multigrad {l n,
    [l {a b, n a b .grad B} F ; ].F
}


.#
.# Static conversion utilities
.#

.#? NNN color.hsvtorgb\n  convert h s v (0-360,0-1,0-1) color to hsv
static color::hsvtorgb {h s v : hi p q t ff,
    .# no saturation, just greyscale
    s 0 = {
        [v v v]
    } {
        .# Compute hue index
        .# floor -> mod 360 -> /60 (hh) -> floor (hi)
        h .\ 360 % 60 /:hh;
        hh .\ :hi;

        hh hi - :ff; .# fractional part

        v 1 s - * :p;
        v 1 s ff * - * :q;
        v 1 s 1 ff - * - * :t;

        [
            [v t p]
            [q v p]
            [p v t]
            [p q v]
            [t p v]
            [v p q]
        ] hi I
    } .?

    255* :#{.round}
}


.#? NNN color.rgbtohsv\n  convert r g b color to hsv\n  r,g,b values are from 0 to 1
static color::rgbtohsv {r g b : h s v delta maxv minv,
    [r g b].min:minv;
    [r g b].max:maxv;
    maxv:v;
    maxv minv-:delta;

    maxv 0 =! {
        r maxv = {
            g b- delta/
        } {
            g maxv = {
                b r- delta/ 2+
            } {
                r g- delta/ 4+
            } .?
        } .? 60* :h;

        h 0< {h 360+:h;} ?

        delta maxv/:s;
    } {
        0:s;
        (-1):h;
    } .?
    [h s v]
}


.{? module: colors
    The colors module defines several color objects. For example:
      colors.red
      colors.aqua
      colors.raspberry
.}
{,

    .#? colors.random\n  get a random color
    {;255Q 255Q 255Q color!}:__random__;

    72  72  68  color!:fg;    .# Aya GUI foreground color
    39  40  34  color!:bg;    .# Aya GUI background color
    0   0   0   color!:black;
    255 255 255 color!:white;
    255 0   0   color!:red;
    0   255 0   color!:green;
    0   0   255 color!:blue;
    255 255 0   color!:yellow;
    255 215 0   color!:gold;
    255 165 0   color!:orange;
    50  205 50  color!:lime;
    0   255 255 color!:aqua;
    255 165 79  color!:tan;
    255 114 86  color!:coral;
    128 0   128 color!:purple;
    220 20  60  color!:crimson;
    255 182 193 color!:lightpink;
    255 192 203 color!:pink;
    255 105 180 color!:hotpink;
    135 38  87  color!:raspberry;
    208 32  144 color!:violetred;
    218 112 214 color!:orchid;
    216 191 216 color!:thistle;
    221 160 221 color!:plum;
    238 130 238 color!:violet;
    186 85  211 color!:mediumorchid;
    148 0   211 color!:darkviolet;
    153 50  204 color!:darkorchid;
    75  0   130 color!:indigo;
    138 43  226 color!:blueviolet;
    147 112 219 color!:mediumpurple;
    106 90  205 color!:slateblue;
    248 248 255 color!:ghostwhite;
    230 230 250 color!:lavender;
    25  25  112 color!:midnightblue;
    61  89  171 color!:cobalt;
    65  105 225 color!:royalblue;
    112 128 144 color!:slategray;
    240 248 255 color!:aliceblue;
    70  130 180 color!:steelblue;
    135 206 250 color!:lightskyblue;
    135 206 235 color!:skyblue;
    51  161 201 color!:peacock;
    173 216 230 color!:lightblue;
    176 224 230 color!:powderblue;
    95  158 160 color!:cadetblue;
    64  224 208 color!:turquoise;
    128 138 135 color!:coldgrey;
    245 255 250 color!:mintcream;
    0   255 127 color!:springgreen;
    0   201 87  color!:emeraldgreen;
    189 252 201 color!:mint;
    61  145 64  color!:cobaltgreen;
    143 188 143 color!:darkseagreen;
    152 251 152 color!:palegreen;
    50  205 50  color!:limegreen;
    34  139 34  color!:forestgreen;
    0   100 0   color!:darkgreen;
    48  128 20  color!:sapgreen;
    124 252 0   color!:lawngreen;
    173 255 47  color!:greenyellow;
    107 142 35  color!:olivedrab;
    245 245 220 color!:beige;
    128 128 105 color!:warmgrey;
    189 183 107 color!:darkkhaki;
    240 230 140 color!:khaki;
    227 207 87  color!:banana;
    218 165 32  color!:goldenrod;
    255 250 240 color!:floralwhite;
    253 245 230 color!:oldlace;
    245 222 179 color!:wheat;
    255 228 181 color!:moccasin;
    255 239 213 color!:papayawhip;
    252 230 201 color!:eggshell;
    210 180 140 color!:tan;
    156 102 31  color!:brick;
    250 235 215 color!:antiquewhite;
    222 184 135 color!:burlywood;
    227 168 105 color!:melon;
    237 145 33  color!:carrot;
    255 140 0   color!:darkorange;
    255 128 0   color!:orange;
    250 240 230 color!:linen;
    244 164 96  color!:sandybrown;
    199 97  20  color!:rawsienna;
    210 105 30  color!:chocolate;
    41  36  33  color!:ivoryblack;
    255 125 64  color!:flesh;
    138 54  15  color!:burntsienna;
    160 82  45  color!:sienna;
    255 127 80  color!:coral;
    94  38  18  color!:sepia;
    233 150 122 color!:darksalmon;
    138 51  36  color!:burntumber;
    250 128 114 color!:salmon;
    188 143 143 color!:rosybrown;
    240 128 128 color!:lightcoral;
    205 92  92  color!:indianred;
    165 42  42  color!:brown;
    178 34  34  color!:firebrick;
    220 220 220 color!:gainsboro;
    211 211 211 color!:lightgrey;
    169 169 169 color!:darkgray;

}:colors;


.#########
.# TESTS #
.#########

import ::test

`~ {:ts,

    "color" testset! :ts;

    {0 0 0 color! :T} [::color] ts+
    {"35C62A" color.newhex.rgb} [[53 198 42]] ts+
    {"35C62A" color.newhex.hsv 100*./} [[11577 79 78]] ts+
    {"35C62A" color.newhex.hex} ["35c62a"] ts+
    {"ff00ff" color.newhex.hex} ["ff00ff"] ts+
    {colors.red colors.blue.mid.rgb} [[127 0 127]] ts+

    ts __aya__.addtest
}
